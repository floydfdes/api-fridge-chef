Fridge Chef API Endpoint Documentation

Base URL: https://api.flofer.com/api/appfridgecheck

Authentication:
All authenticated endpoints require a Bearer token in the Authorization header:
Authorization: Bearer <token>

Endpoints:

1. User Authentication

1.1 Login
URL: /auth/login
Method: POST
Request Body:
{
  "email": "user@example.com",
  "password": "password123"
}
Response:
{
  "id": "123",
  "name": "John Doe",
  "email": "user@example.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}

1.2 Signup
URL: /auth/signup
Method: POST
Request Body:
{
  "fullName": "John Doe",
  "email": "user@example.com",
  "password": "password123"
}
Response:
{
  "id": "124",
  "name": "John Doe",
  "email": "user@example.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}

1.3 Logout
URL: /auth/logout
Method: POST
Headers: Authorization (Bearer Token)
Response:
{
  "message": "Logged out successfully"
}

2. Recipes

2.1 Get All Recipes
URL: /recipes
Method: GET
Headers: Authorization (Bearer Token)
Query Parameters:
  - page (optional): Page number for pagination
  - limit (optional): Number of recipes per page
Response:
{
  "recipes": [
    {
      "id": "1",
      "name": "Spaghetti Carbonara",
      "cuisine": "Italian",
      "category": "dinner",
      "rating": 4.5,
      "imageUrl": "https://example.com/carbonara.jpg",
      "difficulty": "Intermediate"
    },
    // ... more recipes
  ],
  "totalCount": 100,
  "currentPage": 1,
  "totalPages": 10
}

2.2 Get Recipes by Ingredients
URL: /recipes/by-ingredients
Method: POST
Headers: Authorization (Bearer Token)
Request Body:
{
  "ingredients": ["tomato", "cheese", "pasta"]
}
Response:
{
  "recipes": [
    {
      "id": "2",
      "name": "Tomato Pasta",
      "cuisine": "Italian",
      "category": "dinner",
      "rating": 4.2,
      "imageUrl": "https://example.com/tomato-pasta.jpg",
      "difficulty": "Easy"
    },
    // ... more recipes
  ]
}

2.3 Get Specific Recipe
URL: /recipes/:id
Method: GET
Headers: Authorization (Bearer Token)
Response:
{
  "id": "1",
  "name": "Spaghetti Carbonara",
  "cuisine": "Italian",
  "category": "dinner",
  "rating": 4.5,
  "imageUrl": "https://example.com/carbonara.jpg",
  "difficulty": "Intermediate",
  "ingredients": [
    "200g spaghetti",
    "100g pancetta",
    "2 large eggs",
    "50g pecorino cheese",
    "50g parmesan",
    "Freshly ground black pepper"
  ],
  "instructions": "1. Cook spaghetti in salted water...\n2. Fry pancetta...\n3. Beat eggs with cheese...\n4. Combine all ingredients..."
}

3. User Profile

3.1 Get User Profile
URL: /users/:id
Method: GET
Headers: Authorization (Bearer Token)
Response:
{
  "id": "123",
  "name": "John Doe",
  "email": "user@example.com",
  "profilePicture": "https://example.com/profile.jpg",
  "bio": "Food enthusiast | Amateur chef",
  "recipesCount": 15,
  "followersCount": 100,
  "followingCount": 50
}

3.2 Update User Profile
URL: /users/:id
Method: PUT
Headers: Authorization (Bearer Token)
Request Body:
{
  "name": "John Smith",
  "bio": "Professional chef | Food blogger",
  "profilePicture": "https://example.com/new-profile.jpg"
}
Response:
{
  "id": "123",
  "name": "John Smith",
  "email": "user@example.com",
  "profilePicture": "https://example.com/new-profile.jpg",
  "bio": "Professional chef | Food blogger",
  "recipesCount": 15,
  "followersCount": 100,
  "followingCount": 50
}

4. Ingredients

4.1 Get List of Ingredients
URL: /ingredients
Method: GET
Headers: Authorization (Bearer Token)
Response:
{
  "ingredients": [
    "Tomato",
    "Cheese",
    "Pasta",
    "Chicken",
    "Beef",
    "Onion",
    // ... more ingredients
  ]
}

5. Image Upload

5.1 Upload Fridge Image
URL: /upload
Method: POST
Headers: 
  - Authorization (Bearer Token)
  - Content-Type: multipart/form-data
Request Body:
  - image: File (image)
Response:
{
  "imageUrl": "https://example.com/uploaded-fridge-image.jpg",
  "message": "Image uploaded successfully"
}